name: Stable Release on Tag

on:
  push:
    tags:
      - 'v*'   # Solo tags que empiecen con "v"

permissions:
  contents: write

env:
  BUILD_DIR: /tmp/build-results
  ZIP_BASENAME: openSUSE-Tumbleweed-ARM-PHOSH-oneplus6

jobs:
  build-and-release:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Install dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y \
            zip \
            abootimg \
            android-sdk-libsparse-utils \
            mkbootimg

      - name: Prepare build directory
        run: mkdir -p ${{ env.BUILD_DIR }}

      - name: Run build script
        run: sudo bash all.sh
        shell: bash

      - name: Set date and version
        run: |
          DATE_TAG=$(date +'%Y%m%d')
          VERSION_TAG=${GITHUB_REF##*/}
          echo "DATE_TAG=$DATE_TAG" >> $GITHUB_ENV
          echo "VERSION_TAG=$VERSION_TAG" >> $GITHUB_ENV

      - name: Package generated files
        run: |
          ZIP_FILE="${{ env.BUILD_DIR }}/${{ env.ZIP_BASENAME }}_${{ env.VERSION_TAG }}.zip"
          echo "📦 Empaquetando archivos openSUSE* en: $ZIP_FILE"
          shopt -s nullglob
          FILES=(openSUSE*)
          if [ ${#FILES[@]} -eq 0 ]; then
            echo "❌ No se encontraron archivos que comiencen por 'openSUSE'"
            exit 1
          fi
          zip -r "$ZIP_FILE" "${FILES[@]}"
          echo "ZIP_FILE=$ZIP_FILE" >> $GITHUB_ENV

      - name: Delete previous release with same tag if exists
        run: |
          gh release delete "${{ env.VERSION_TAG }}" --yes || true
          git tag -d "${{ env.VERSION_TAG }}" || true
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Create stable release
        run: |
          gh release create "${{ env.VERSION_TAG }}" \
            "${{ env.ZIP_FILE }}" \
            --title "Opensuse Mobile - Stable - ${{ env.VERSION_TAG }}" \
            --notes "Stable release for Oneplus 6/6t (enchilada/fajita) from tag ${{ env.VERSION_TAG }}" 
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Clean up
        run: sudo rm -rf ${{ env.BUILD_DIR }}

